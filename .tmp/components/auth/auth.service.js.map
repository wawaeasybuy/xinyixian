{"version":3,"sources":["../../../client/components/auth/auth.service.js"],"names":[],"mappings":"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","file":"auth.service.js","sourcesContent":["'use strict';\n\nangular.module('xinyixianApp')\n  .factory('Auth', function Auth($location, $rootScope, $http, User, $cookieStore, $q) {\n    var currentUser = {};\n    if($cookieStore.get('token')) {\n      currentUser = User.get();\n    }\n\n    return {\n\n      /**\n       * Authenticate user and save token\n       *\n       * @param  {Object}   user     - login info\n       * @param  {Function} callback - optional\n       * @return {Promise}\n       */\n      login: function(user, callback) {\n        var cb = callback || angular.noop;\n        var deferred = $q.defer();\n\n        $http.post('/auth/local', {\n          email: user.email,\n          password: user.password\n        }).\n        success(function(data) {\n          $cookieStore.put('token', data.token);\n          currentUser = User.get();\n          deferred.resolve(data);\n          return cb();\n        }).\n        error(function(err) {\n          this.logout();\n          deferred.reject(err);\n          return cb(err);\n        }.bind(this));\n\n        return deferred.promise;\n      },\n\n      /**\n       * Delete access token and user info\n       *\n       * @param  {Function}\n       */\n      logout: function() {\n        $cookieStore.remove('token');\n        currentUser = {};\n      },\n\n      /**\n       * Create a new user\n       *\n       * @param  {Object}   user     - user info\n       * @param  {Function} callback - optional\n       * @return {Promise}\n       */\n      createUser: function(user, callback) {\n        var cb = callback || angular.noop;\n\n        return User.save(user,\n          function(data) {\n            $cookieStore.put('token', data.token);\n            currentUser = User.get();\n            return cb(user);\n          },\n          function(err) {\n            this.logout();\n            return cb(err);\n          }.bind(this)).$promise;\n      },\n\n      /**\n       * Change password\n       *\n       * @param  {String}   oldPassword\n       * @param  {String}   newPassword\n       * @param  {Function} callback    - optional\n       * @return {Promise}\n       */\n      changePassword: function(oldPassword, newPassword, callback) {\n        var cb = callback || angular.noop;\n\n        return User.changePassword({ id: currentUser._id }, {\n          oldPassword: oldPassword,\n          newPassword: newPassword\n        }, function(user) {\n          return cb(user);\n        }, function(err) {\n          return cb(err);\n        }).$promise;\n      },\n\n      /**\n       * Gets all available info on authenticated user\n       *\n       * @return {Object} user\n       */\n      getCurrentUser: function() {\n        return currentUser;\n      },\n\n      /**\n       * Check if a user is logged in\n       *\n       * @return {Boolean}\n       */\n      isLoggedIn: function() {\n        return currentUser.hasOwnProperty('role');\n      },\n\n      /**\n       * Waits for currentUser to resolve before checking if user is logged in\n       */\n      isLoggedInAsync: function(cb) {\n        if(currentUser.hasOwnProperty('$promise')) {\n          currentUser.$promise.then(function() {\n            cb(true);\n          }).catch(function() {\n            cb(false);\n          });\n        } else if(currentUser.hasOwnProperty('role')) {\n          cb(true);\n        } else {\n          cb(false);\n        }\n      },\n\n      /**\n       * Check if a user is an admin\n       *\n       * @return {Boolean}\n       */\n      isAdmin: function() {\n        return currentUser.role === 'admin';\n      },\n\n      /**\n       * Get auth token\n       */\n      getToken: function() {\n        return $cookieStore.get('token');\n      }\n    };\n  });\n"]}