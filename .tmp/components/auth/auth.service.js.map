{"version":3,"sources":["../../../client/components/auth/auth.service.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,MAAR,CAAe,cAAf,EACG,OADH,CACW,MADX,EACmB,SAAS,IAAT,CAAc,SAAd,EAAyB,UAAzB,EAAqC,KAArC,EAA4C,IAA5C,EAAkD,YAAlD,EAAgE,EAAhE,EAAoE;AACnF,MAAI,cAAc,EAAd,CAD+E;AAEnF,MAAG,aAAa,GAAb,CAAiB,OAAjB,CAAH,EAA8B;AAC5B,kBAAc,KAAK,GAAL,EAAd,CAD4B;GAA9B;;AAIA,SAAO;;;;;;;;;AASL,WAAO,UAAS,IAAT,EAAe,QAAf,EAAyB;AAC9B,UAAI,KAAK,YAAY,QAAQ,IAAR,CADS;AAE9B,UAAI,WAAW,GAAG,KAAH,EAAX,CAF0B;;AAI9B,YAAM,IAAN,CAAW,aAAX,EAA0B;AACxB,eAAO,KAAK,KAAL;AACP,kBAAU,KAAK,QAAL;OAFZ,EAIA,OAJA,CAIQ,UAAS,IAAT,EAAe;AACrB,qBAAa,GAAb,CAAiB,OAAjB,EAA0B,KAAK,KAAL,CAA1B,CADqB;AAErB,sBAAc,KAAK,GAAL,EAAd,CAFqB;AAGrB,iBAAS,OAAT,CAAiB,IAAjB,EAHqB;AAIrB,eAAO,IAAP,CAJqB;OAAf,CAJR,CAUA,KAVA,CAUM,UAAS,GAAT,EAAc;AAClB,aAAK,MAAL,GADkB;AAElB,iBAAS,MAAT,CAAgB,GAAhB,EAFkB;AAGlB,eAAO,GAAG,GAAH,CAAP,CAHkB;OAAd,CAIJ,IAJI,CAIC,IAJD,CAVN,EAJ8B;;AAoB9B,aAAO,SAAS,OAAT,CApBuB;KAAzB;;;;;;;AA4BP,YAAQ,YAAW;AACjB,mBAAa,MAAb,CAAoB,OAApB,EADiB;AAEjB,oBAAc,EAAd,CAFiB;KAAX;;;;;;;;;AAYR,gBAAY,UAAS,IAAT,EAAe,QAAf,EAAyB;AACnC,UAAI,KAAK,YAAY,QAAQ,IAAR,CADc;;AAGnC,aAAO,KAAK,IAAL,CAAU,IAAV,EACL,UAAS,IAAT,EAAe;AACb,qBAAa,GAAb,CAAiB,OAAjB,EAA0B,KAAK,KAAL,CAA1B,CADa;AAEb,sBAAc,KAAK,GAAL,EAAd,CAFa;AAGb,eAAO,GAAG,IAAH,CAAP,CAHa;OAAf,EAKA,UAAS,GAAT,EAAc;AACZ,aAAK,MAAL,GADY;AAEZ,eAAO,GAAG,GAAH,CAAP,CAFY;OAAd,CAGE,IAHF,CAGO,IAHP,CANK,EASS,QATT,CAH4B;KAAzB;;;;;;;;;;AAuBZ,oBAAgB,UAAS,WAAT,EAAsB,WAAtB,EAAmC,QAAnC,EAA6C;AAC3D,UAAI,KAAK,YAAY,QAAQ,IAAR,CADsC;;AAG3D,aAAO,KAAK,cAAL,CAAoB,EAAE,IAAI,YAAY,GAAZ,EAA1B,EAA6C;AAClD,qBAAa,WAAb;AACA,qBAAa,WAAb;OAFK,EAGJ,UAAS,IAAT,EAAe;AAChB,eAAO,GAAG,IAAH,CAAP,CADgB;OAAf,EAEA,UAAS,GAAT,EAAc;AACf,eAAO,GAAG,GAAH,CAAP,CADe;OAAd,CALI,CAOJ,QAPI,CAHoD;KAA7C;;;;;;;AAkBhB,oBAAgB,YAAW;AACzB,aAAO,WAAP,CADyB;KAAX;;;;;;;AAShB,gBAAY,YAAW;AACrB,aAAO,YAAY,cAAZ,CAA2B,MAA3B,CAAP,CADqB;KAAX;;;;;AAOZ,qBAAiB,UAAS,EAAT,EAAa;AAC5B,UAAG,YAAY,cAAZ,CAA2B,UAA3B,CAAH,EAA2C;AACzC,oBAAY,QAAZ,CAAqB,IAArB,CAA0B,YAAW;AACnC,aAAG,IAAH,EADmC;SAAX,CAA1B,CAEG,KAFH,CAES,YAAW;AAClB,aAAG,KAAH,EADkB;SAAX,CAFT,CADyC;OAA3C,MAMO,IAAG,YAAY,cAAZ,CAA2B,MAA3B,CAAH,EAAuC;AAC5C,WAAG,IAAH,EAD4C;OAAvC,MAEA;AACL,WAAG,KAAH,EADK;OAFA;KAPQ;;;;;;;AAmBjB,aAAS,YAAW;AAClB,aAAO,YAAY,IAAZ,KAAqB,OAArB,CADW;KAAX;;;;;AAOT,cAAU,YAAW;AACnB,aAAO,aAAa,GAAb,CAAiB,OAAjB,CAAP,CADmB;KAAX;GApIZ,CANmF;CAApE,CADnB","file":"auth.service.js","sourcesContent":["'use strict';\n\nangular.module('xinyixianApp')\n  .factory('Auth', function Auth($location, $rootScope, $http, User, $cookieStore, $q) {\n    var currentUser = {};\n    if($cookieStore.get('token')) {\n      currentUser = User.get();\n    }\n\n    return {\n\n      /**\n       * Authenticate user and save token\n       *\n       * @param  {Object}   user     - login info\n       * @param  {Function} callback - optional\n       * @return {Promise}\n       */\n      login: function(user, callback) {\n        var cb = callback || angular.noop;\n        var deferred = $q.defer();\n\n        $http.post('/auth/local', {\n          email: user.email,\n          password: user.password\n        }).\n        success(function(data) {\n          $cookieStore.put('token', data.token);\n          currentUser = User.get();\n          deferred.resolve(data);\n          return cb();\n        }).\n        error(function(err) {\n          this.logout();\n          deferred.reject(err);\n          return cb(err);\n        }.bind(this));\n\n        return deferred.promise;\n      },\n\n      /**\n       * Delete access token and user info\n       *\n       * @param  {Function}\n       */\n      logout: function() {\n        $cookieStore.remove('token');\n        currentUser = {};\n      },\n\n      /**\n       * Create a new user\n       *\n       * @param  {Object}   user     - user info\n       * @param  {Function} callback - optional\n       * @return {Promise}\n       */\n      createUser: function(user, callback) {\n        var cb = callback || angular.noop;\n\n        return User.save(user,\n          function(data) {\n            $cookieStore.put('token', data.token);\n            currentUser = User.get();\n            return cb(user);\n          },\n          function(err) {\n            this.logout();\n            return cb(err);\n          }.bind(this)).$promise;\n      },\n\n      /**\n       * Change password\n       *\n       * @param  {String}   oldPassword\n       * @param  {String}   newPassword\n       * @param  {Function} callback    - optional\n       * @return {Promise}\n       */\n      changePassword: function(oldPassword, newPassword, callback) {\n        var cb = callback || angular.noop;\n\n        return User.changePassword({ id: currentUser._id }, {\n          oldPassword: oldPassword,\n          newPassword: newPassword\n        }, function(user) {\n          return cb(user);\n        }, function(err) {\n          return cb(err);\n        }).$promise;\n      },\n\n      /**\n       * Gets all available info on authenticated user\n       *\n       * @return {Object} user\n       */\n      getCurrentUser: function() {\n        return currentUser;\n      },\n\n      /**\n       * Check if a user is logged in\n       *\n       * @return {Boolean}\n       */\n      isLoggedIn: function() {\n        return currentUser.hasOwnProperty('role');\n      },\n\n      /**\n       * Waits for currentUser to resolve before checking if user is logged in\n       */\n      isLoggedInAsync: function(cb) {\n        if(currentUser.hasOwnProperty('$promise')) {\n          currentUser.$promise.then(function() {\n            cb(true);\n          }).catch(function() {\n            cb(false);\n          });\n        } else if(currentUser.hasOwnProperty('role')) {\n          cb(true);\n        } else {\n          cb(false);\n        }\n      },\n\n      /**\n       * Check if a user is an admin\n       *\n       * @return {Boolean}\n       */\n      isAdmin: function() {\n        return currentUser.role === 'admin';\n      },\n\n      /**\n       * Get auth token\n       */\n      getToken: function() {\n        return $cookieStore.get('token');\n      }\n    };\n  });\n"]}